<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Garimas-MacBook.local" failures="0" tests="8" name="Default test" time="0.176" errors="0" timestamp="2023-12-21T18:15:34 PST">
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.013">
    <failure type="java.lang.Error" message="Unresolved compilation problem: 
	filepath cannot be resolved to a variable
">
      <![CDATA[java.lang.Error: Unresolved compilation problem: 
filepath cannot be resolved to a variable

at Utilities.Utils.getConfigProperty(Utils.java:17)
at Helpers.UserServiceHelper.getBaseURI(UserServiceHelper.java:13)
at APITest.TestCases.setUp(TestCases.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="APITest.TestCases" name="createSingleRepoTestCas4" time="0.0">
    <skipped/>
  </testcase> <!-- createSingleRepoTestCas4 -->
  <testcase classname="APITest.TestCases" name="createSingleRepoTestCas5" time="0.0">
    <skipped/>
  </testcase> <!-- createSingleRepoTestCas5 -->
  <testcase classname="APITest.TestCases" name="getAllReposSchema" time="0.0">
    <skipped/>
  </testcase> <!-- getAllReposSchema -->
  <testcase classname="APITest.TestCases" name="getSingleRepoTestCase1" time="0.0">
    <skipped/>
  </testcase> <!-- getSingleRepoTestCase1 -->
  <testcase classname="APITest.TestCases" name="getSingleRepoTestCase2" time="0.0">
    <skipped/>
  </testcase> <!-- getSingleRepoTestCase2 -->
  <testcase classname="APITest.TestCases" name="updateSingleRepoTestCas6" time="0.0">
    <skipped/>
  </testcase> <!-- updateSingleRepoTestCas6 -->
  <testcase classname="APITest.TestCases" name="updateSingleRepoTestCas7" time="0.0">
    <skipped/>
  </testcase> <!-- updateSingleRepoTestCas7 -->
  <testcase classname="APITest.TestCases" name="validateTestCase8" time="0.0">
    <skipped/>
  </testcase> <!-- validateTestCase8 -->
</testsuite> <!-- Default test -->
